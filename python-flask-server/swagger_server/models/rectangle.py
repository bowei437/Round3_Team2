# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.coordinate import Coordinate
from swagger_server.models.shape import Shape
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Rectangle(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, shape_type: str=None, coordinates: List[Coordinate]=None, name: str='rectangle'):
        """
        Rectangle - a model defined in Swagger

        :param shape_type: The shape_type of this Rectangle.
        :type shape_type: str
        :param coordinates: The coordinates of this Rectangle.
        :type coordinates: List[Coordinate]
        :param name: The name of this Rectangle.
        :type name: str
        """
        self.swagger_types = {
            'shape_type': str,
            'coordinates': List[Coordinate],
            'name': str
        }

        self.attribute_map = {
            'shape_type': 'shapeType',
            'coordinates': 'coordinates',
            'name': 'name'
        }

        self._shape_type = shape_type
        self._coordinates = coordinates
        self._name = name

    @classmethod
    def from_dict(cls, dikt) -> 'Rectangle':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Rectangle of this Rectangle.
        :rtype: Rectangle
        """
        return deserialize_model(dikt, cls)

    @property
    def shape_type(self) -> str:
        """
        Gets the shape_type of this Rectangle.

        :return: The shape_type of this Rectangle.
        :rtype: str
        """
        return self._shape_type

    @shape_type.setter
    def shape_type(self, shape_type: str):
        """
        Sets the shape_type of this Rectangle.

        :param shape_type: The shape_type of this Rectangle.
        :type shape_type: str
        """
        if shape_type is None:
            raise ValueError("Invalid value for `shape_type`, must not be `None`")

        self._shape_type = shape_type

    @property
    def coordinates(self) -> List[Coordinate]:
        """
        Gets the coordinates of this Rectangle.

        :return: The coordinates of this Rectangle.
        :rtype: List[Coordinate]
        """
        return self._coordinates

    @coordinates.setter
    def coordinates(self, coordinates: List[Coordinate]):
        """
        Sets the coordinates of this Rectangle.

        :param coordinates: The coordinates of this Rectangle.
        :type coordinates: List[Coordinate]
        """

        self._coordinates = coordinates

    @property
    def name(self) -> str:
        """
        Gets the name of this Rectangle.

        :return: The name of this Rectangle.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """
        Sets the name of this Rectangle.

        :param name: The name of this Rectangle.
        :type name: str
        """

        self._name = name

