# coding: utf-8

from __future__ import absolute_import
from swagger_server.models.coordinate import Coordinate
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Goal(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, coordinates: Coordinate=None):
        """
        Goal - a model defined in Swagger

        :param coordinates: The coordinates of this Goal.
        :type coordinates: Coordinate
        """
        self.swagger_types = {
            'coordinates': Coordinate
        }

        self.attribute_map = {
            'coordinates': 'coordinates'
        }

        self._coordinates = coordinates

    @classmethod
    def from_dict(cls, dikt) -> 'Goal':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Goal of this Goal.
        :rtype: Goal
        """
        return deserialize_model(dikt, cls)

    @property
    def coordinates(self) -> Coordinate:
        """
        Gets the coordinates of this Goal.

        :return: The coordinates of this Goal.
        :rtype: Coordinate
        """
        return self._coordinates

    @coordinates.setter
    def coordinates(self, coordinates: Coordinate):
        """
        Sets the coordinates of this Goal.

        :param coordinates: The coordinates of this Goal.
        :type coordinates: Coordinate
        """
        if coordinates is None:
            raise ValueError("Invalid value for `coordinates`, must not be `None`")

        self._coordinates = coordinates

