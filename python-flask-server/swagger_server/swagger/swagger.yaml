---
swagger: "2.0"
info:
  description: "Calculates minimum path between points depending on user generated\
    \ map input."
  version: "3.0.0"
  title: "Team 2 Pathfinding API"
basePath: "/v3"
schemes:
- "http"
paths:
  /:
    post:
      tags:
      - "Problems"
      summary: "Creates a new problem and returns a problemID"
      description: ""
      operationId: "add_problem"
      produces:
      - "application/json"
      - "application/xml"
      parameters: []
      responses:
        201:
          description: "The id of the new problem generated"
          schema:
            type: "integer"
            format: "int32"
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.problems_controller"
  /id={problem_id}/:
    get:
      tags:
      - "Problems"
      summary: "Problems"
      description: "Returns a specific problem\n"
      operationId: "get_problem"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "problem_id"
        in: "path"
        description: "The id of the problem being manipulated"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "A Problem type, containing all values"
          schema:
            $ref: "#/definitions/Problem"
        409:
          description: "Version Out of Date"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.problems_controller"
    delete:
      tags:
      - "Problems"
      summary: "Delete Problem"
      description: "This removes the problem by the given ID"
      operationId: "delete_problem"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "problem_id"
        in: "path"
        description: "The id of the problem being manipulated"
        required: true
        type: "integer"
        format: "int32"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Problem not found"
        409:
          description: "Version Out of Date"
      x-swagger-router-controller: "swagger_server.controllers.problems_controller"
  /id={problem_id}/Obstacles:
    get:
      tags:
      - "Obstacles"
      summary: "Obstacles"
      description: "Returns a list of all of the obstacles in the problem. This can\
        \ be an empty list.\n"
      operationId: "get_obstacles"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "problem_id"
        in: "path"
        description: "The id of the problem being manipulated"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "An array of obstacles"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Obstacle"
        409:
          description: "Version Out of Date"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.obstacles_controller"
    post:
      tags:
      - "Obstacles"
      summary: "Add a new obstacle to the list"
      description: ""
      operationId: "add_obstacle"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "problem_id"
        in: "path"
        description: "The id of the problem being manipulated"
        required: true
        type: "integer"
        format: "int32"
      - in: "body"
        name: "obstacle"
        description: "Obstacle object that needs to be added to the list."
        required: true
        schema:
          $ref: "#/definitions/Obstacle"
      responses:
        200:
          description: "The id of the new obstacle generated"
          schema:
            type: "integer"
            format: "int32"
        405:
          description: "Invalid input"
        409:
          description: "Version Out of Date"
      x-swagger-router-controller: "swagger_server.controllers.obstacles_controller"
  /id={problem_id}/Obstacles/obstacle_id={obstacle_id}:
    get:
      tags:
      - "Obstacles"
      summary: "Obstacles"
      description: "Returns an obstacle\n"
      operationId: "get_obstacle"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "problem_id"
        in: "path"
        description: "The id of the problem being manipulated"
        required: true
        type: "integer"
        format: "int32"
      - name: "obstacle_id"
        in: "path"
        description: "The id of the obstacle to be updated."
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "An obstacle"
          schema:
            $ref: "#/definitions/Obstacle"
        409:
          description: "Version Out of Date"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.obstacles_controller"
    put:
      tags:
      - "Obstacles"
      summary: "Update an existing obstacle"
      description: ""
      operationId: "update_obstacle"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "problem_id"
        in: "path"
        description: "The id of the problem being manipulated"
        required: true
        type: "integer"
        format: "int32"
      - name: "obstacle_id"
        in: "path"
        description: "The id of the obstacle to be updated."
        required: true
        type: "integer"
        format: "int32"
      - in: "body"
        name: "updated_obstacle"
        description: "Obstacle object that needs to be added to the list."
        required: false
        schema:
          $ref: "#/definitions/Obstacle"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Obstacle not found"
        405:
          description: "Validation exception"
        409:
          description: "Version Out of Date"
      x-swagger-router-controller: "swagger_server.controllers.obstacles_controller"
    delete:
      tags:
      - "Obstacles"
      summary: "Delete Obstacle"
      description: "This removes the obstacle by the given ID"
      operationId: "delete_obstacle"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "problem_id"
        in: "path"
        description: "The id of the problem being manipulated"
        required: true
        type: "integer"
        format: "int32"
      - name: "obstacle_id"
        in: "path"
        description: "The ID of the Obstacle that needs to be deleted."
        required: true
        type: "integer"
        format: "int32"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Obstacle not found"
        409:
          description: "Version Out of Date"
      x-swagger-router-controller: "swagger_server.controllers.obstacles_controller"
  /id={problem_id}/Robot:
    get:
      tags:
      - "Robot"
      summary: "Robot"
      description: "Returns a description of the robots, including the current location\n"
      operationId: "get_robots"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "problem_id"
        in: "path"
        description: "The id of the problem being manipulated"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "A robot object array, including current location."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Robot"
        409:
          description: "Version Out of Date"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.robot_controller"
    post:
      tags:
      - "Robot"
      summary: "Add a new robot to the list"
      description: ""
      operationId: "add_robot"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "problem_id"
        in: "path"
        description: "The id of the problem being manipulated"
        required: true
        type: "integer"
        format: "int32"
      - in: "body"
        name: "robot"
        description: "Obstacle object that needs to be added to the list."
        required: true
        schema:
          $ref: "#/definitions/Robot"
      responses:
        200:
          description: "The id of the new robot generated"
          schema:
            type: "integer"
            format: "int32"
        405:
          description: "Invalid input"
        409:
          description: "Version Out of Date"
      x-swagger-router-controller: "swagger_server.controllers.robot_controller"
  /id={problem_id}/Robot/rid={robot_id}:
    get:
      tags:
      - "Robot"
      summary: "Get a robot by the ID"
      description: ""
      operationId: "get_robot"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "problem_id"
        in: "path"
        description: "The id of the problem being manipulated"
        required: true
        type: "integer"
        format: "int32"
      - name: "robot_id"
        in: "path"
        description: "Robot object that needs to be updated."
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "A robot"
          schema:
            $ref: "#/definitions/Robot"
        404:
          description: "Robot not found"
        405:
          description: "Validation exception"
        409:
          description: "Version Out of Date"
      x-swagger-router-controller: "swagger_server.controllers.robot_controller"
    put:
      tags:
      - "Robot"
      summary: "Update the existing robot value"
      description: ""
      operationId: "update_robot"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "problem_id"
        in: "path"
        description: "The id of the problem being manipulated"
        required: true
        type: "integer"
        format: "int32"
      - in: "body"
        name: "robot"
        description: "Robot object that needs to be updated."
        required: true
        schema:
          $ref: "#/definitions/Robot"
      - name: "robot_id"
        in: "path"
        description: "Robot object that needs to be updated."
        required: true
        type: "integer"
        format: "int32"
      responses:
        404:
          description: "Robot not found"
        405:
          description: "Validation exception"
        409:
          description: "Version Out of Date"
      x-swagger-router-controller: "swagger_server.controllers.robot_controller"
    delete:
      tags:
      - "Robot"
      summary: "Delete Robot"
      description: "This removes the robot by the given ID"
      operationId: "delete_robot"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "problem_id"
        in: "path"
        description: "The id of the problem being manipulated"
        required: true
        type: "integer"
        format: "int32"
      - name: "robot_id"
        in: "path"
        description: "The ID of the Obstacle that needs to be deleted."
        required: true
        type: "integer"
        format: "int32"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "Robot not found"
        409:
          description: "Version Out of Date"
      x-swagger-router-controller: "swagger_server.controllers.robot_controller"
  /id={problem_id}/Goal:
    get:
      tags:
      - "Goal"
      summary: "Goal Location"
      description: "Returns a description of the goal location.\n"
      operationId: "get_goal"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "problem_id"
        in: "path"
        description: "The id of the problem being manipulated"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "The goal location information"
          schema:
            $ref: "#/definitions/Goal"
        409:
          description: "Version Out of Date"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.goal_controller"
    put:
      tags:
      - "Goal"
      summary: "Update the existing goal value"
      description: ""
      operationId: "update_goal"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "problem_id"
        in: "path"
        description: "The id of the problem being manipulated"
        required: true
        type: "integer"
        format: "int32"
      - in: "body"
        name: "goal"
        description: "Goal object that needs to be updated."
        required: true
        schema:
          $ref: "#/definitions/Goal"
      responses:
        404:
          description: "Goal not found"
        405:
          description: "Validation exception"
        409:
          description: "Version Out of Date"
      x-swagger-router-controller: "swagger_server.controllers.goal_controller"
  /id={problem_id}/Boundary:
    get:
      tags:
      - "Boundary"
      summary: "Boundary"
      description: "Returns a description of the boundary"
      operationId: "get_boundary"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "problem_id"
        in: "path"
        description: "The id of the problem being manipulated"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "Boundary information, including starting coordinates, width\
            \ and height"
          schema:
            $ref: "#/definitions/Boundary"
        409:
          description: "Version Out of Date"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.boundary_controller"
    put:
      tags:
      - "Boundary"
      summary: "Update the existing boundary value"
      description: ""
      operationId: "update_boundary"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "problem_id"
        in: "path"
        description: "The id of the problem being manipulated"
        required: true
        type: "integer"
        format: "int32"
      - in: "body"
        name: "boundary"
        description: "Boundary object that needs to be updated."
        required: true
        schema:
          $ref: "#/definitions/Boundary"
      responses:
        404:
          description: "Boundary not found"
        405:
          description: "Validation exception"
        409:
          description: "Version Out of Date"
      x-swagger-router-controller: "swagger_server.controllers.boundary_controller"
  /id={problem_id}/Path:
    get:
      tags:
      - "Path"
      summary: "Path"
      description: "Returns a description of the path from the robot's current location\
        \ to the goal."
      operationId: "get_path"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "problem_id"
        in: "path"
        description: "The id of the problem being manipulated"
        required: true
        type: "integer"
        format: "int32"
      responses:
        200:
          description: "Array of Coordinates from start to finish."
          schema:
            $ref: "#/definitions/Path"
        409:
          description: "Version Out of Date"
        default:
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "swagger_server.controllers.path_controller"
definitions:
  Coordinate:
    type: "object"
    properties:
      longitude:
        type: "number"
        format: "double"
        description: "the longitude of the object."
      latitude:
        type: "number"
        format: "double"
        description: "the latitude of the object."
  Obstacle:
    type: "object"
    properties:
      obstacle_id:
        type: "integer"
        format: "int32"
        description: "Unique identifier representing a specific obstacle in the list."
      shape:
        type: "string"
      coordinates:
        type: "array"
        items:
          $ref: "#/definitions/Coordinate"
  Rectangle:
    type: "object"
    properties:
      coordinates:
        type: "array"
        items:
          $ref: "#/definitions/Coordinate"
  Triangle:
    type: "object"
    properties:
      coordinates:
        type: "array"
        items:
          $ref: "#/definitions/Coordinate"
  Polygon:
    type: "object"
    properties:
      coordinates:
        type: "array"
        items:
          $ref: "#/definitions/Coordinate"
  Shapes:
    type: "object"
    properties:
      rectangle:
        $ref: "#/definitions/Rectangle"
      triangle:
        $ref: "#/definitions/Triangle"
      polygon:
        $ref: "#/definitions/Polygon"
  Robot:
    type: "object"
    properties:
      coordinates:
        $ref: "#/definitions/Coordinate"
      id:
        type: "integer"
        format: "int32"
  Goal:
    type: "object"
    properties:
      coordinates:
        $ref: "#/definitions/Coordinate"
  Boundary:
    type: "object"
    properties:
      shape:
        type: "string"
      coordinates:
        type: "array"
        items:
          $ref: "#/definitions/Coordinate"
  Path:
    type: "object"
    properties:
      path_cost:
        type: "number"
        format: "double"
        description: "The total cost to travel the path"
      coordinates:
        type: "array"
        description: "The path travelled"
        items:
          $ref: "#/definitions/Coordinate"
  Problem:
    type: "object"
    properties:
      version:
        type: "integer"
        format: "int32"
      problem_id:
        type: "integer"
        format: "int32"
      robots:
        type: "array"
        description: "The list of robots for the problem"
        items:
          $ref: "#/definitions/Robot"
      goal:
        $ref: "#/definitions/Goal"
      boundary:
        $ref: "#/definitions/Boundary"
      obstacles:
        type: "array"
        items:
          $ref: "#/definitions/Obstacle"
  Error:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      message:
        type: "string"
      fields:
        type: "string"
